{"version":3,"sources":["pages/counter/components/CounterPage.tsx"],"names":[],"mappings":";AAqEC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,iBAAA,EArED,IAAA,EAAA,EAAA,QAAA,UACA,EAAA,QAAA,MAEA,EAAA,QAAA,gDACA,EAAA,QAAA,uDACA,EAAA,EAAA,QAAA,0BACA,EAAA,QAAA,8BACA,EAAA,QAAA,4BACA,EAAA,QAAA,8BACA,EAAA,QAAA,mBA4DC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,IAAA,EAAA,GAAA,GAAA,MAAA,EAAA,IAAA,IAAA,KAAA,EAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,OAAA,gBAAA,OAAA,yBAAA,OAAA,yBAAA,EAAA,GAAA,GAAA,EAAA,KAAA,EAAA,IAAA,OAAA,eAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,QAAA,EAAA,EA1DD,MAAM,GAAS,EAAO,EAAA,QAAA,EAAP;gBACC,EAAG,MAAA,KAAY,EAAM;EAG/B,GAAc,EAAO,EAAA,QAAA,EAAP;;;YAGR,EAAG,MAAA,KAAY,EAAM;EAG3B,EAAoB,EAAO,OAAA;;;YAGrB,EAAG,MAAA,KAAY,EAAM;;QAEzB,EAAM;gBACE,EAAG,MAAA,KAAY,EAAM;;EAMxB,EAA8C,KACnD,OAAC,MAAE,EAAF,QAAS,GAAW,IAAY,EAAS,EAAA,SAAA,GAE1C,GAAY,EAAY,EAAA,aAAA,IAAM,EAAS,EAAe,eAAA,aAAc,CACxE,IAEI,GAAiB,EACrB,EAAA,aAAA,IAAM,EAAS,EAAe,eAAA,kBAC9B,CAAC,IAGC,OAAA,EACK,EAAA,QAAA,cAAC,EAAD,KAAK,KAAA,cAIZ,EAAA,QAAA,cAAC,EAAM,KACL,EAAA,QAAA,cAAC,EAAD,oBAAoB,KAClB,EAAA,QAAA,cAAC,EAAW,KAAZ,UAAqB,GACrB,EAAA,QAAA,cAAC,EAAiB,KAChB,EAAA,QAAA,cAAC,EAAD,OAAO,CAAC,QAAS,GAAS,aAC1B,EAAA,QAAA,cAAC,EAAD,OAAO,CAAC,QAAS,GAAc,uBAOzC,SAAS,EAAS,GACV,MAAA,MAAE,GAAU,EAAM,SAClB,QAAE,GAAY,EAAM,QAEnB,MAAA,CACL,MAAA,EACA,QAAA,GAEH,QAAA,YAAA","file":"CounterPage.ed0bc6dc.map","sourceRoot":"../src","sourcesContent":["import React, { useCallback } from 'react';\nimport { counterEffects } from '..';\nimport { AppState } from '../../../app/app-type';\nimport { CenterLayout } from '../../../app/components/layouts/CenterLayout';\nimport { VerticalStackLayout } from '../../../app/components/layouts/VerticalStackLayout';\nimport useRedux from '../../../app/useRedux';\nimport { Button } from '../../../components/Button';\nimport { Text } from '../../../components/Text';\nimport { styled } from '../../../styled-components';\nimport { counterActions } from '../counter-type';\n\nconst Layout = styled(CenterLayout)`\n  margin-top: ${({ theme }) => theme.space};\n`;\n\nconst CountLayout = styled(Text)`\n  display: flex;\n  justify-content: center;\n  margin: ${({ theme }) => theme.space};\n`;\n\nconst ButtonGroupLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: ${({ theme }) => theme.space};\n\n  & > ${Button} {\n    margin: 0 ${({ theme }) => theme.space};\n  }\n`;\n\ninterface Props {}\n\nexport const CounterPage: React.FunctionComponent<Props> = () => {\n  const [{ count, loading }, dispatch] = useRedux(mapState);\n\n  const increment = useCallback(() => dispatch(counterActions.increment()), [\n    dispatch,\n  ]);\n  const incrementByTen = useCallback(\n    () => dispatch(counterEffects.incrementByTen()),\n    [dispatch],\n  );\n\n  if (loading) {\n    return <Text>Loading...</Text>;\n  }\n\n  return (\n    <Layout>\n      <VerticalStackLayout>\n        <CountLayout>Count: {count}</CountLayout>\n        <ButtonGroupLayout>\n          <Button onClick={increment}>Increment</Button>\n          <Button onClick={incrementByTen}>Increment by 10</Button>\n        </ButtonGroupLayout>\n      </VerticalStackLayout>\n    </Layout>\n  );\n};\n\nfunction mapState(state: AppState) {\n  const { count } = state.counter;\n  const { loading } = state.routing;\n\n  return {\n    count,\n    loading,\n  };\n}\n"]}